/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */
import type { ColumnType } from 'kysely';

export type Generated<T> =
	T extends ColumnType<infer S, infer I, infer U>
		? ColumnType<S, I | undefined, U>
		: ColumnType<T, T | undefined, T>;

export interface ArchiveImages {
	archiveId: number;
	filename: string;
	height: number | null;
	pageNumber: number;
	width: number | null;
}

export interface Archives {
	createdAt: Generated<string>;
	deletedAt: string | null;
	description: string | null;
	fts: string | null;
	hash: string;
	id: Generated<number>;
	language: string | null;
	pages: number;
	path: string;
	protected: Generated<boolean>;
	releasedAt: string | null;
	size: number;
	thumbnail: Generated<number>;
	title: string;
	updatedAt: Generated<string>;
}

export interface ArchiveSources {
	archiveId: number;
	createdAt: Generated<string>;
	name: string;
	url: string | null;
}

export interface ArchiveTags {
	archiveId: number;
	createdAt: Generated<string>;
	tagId: number;
}

export interface Collection {
	anonymous: Generated<boolean>;
	createdAt: Generated<string>;
	id: Generated<number>;
	name: string;
	protected: Generated<boolean>;
	public: Generated<boolean>;
	slug: string;
	updatedAt: Generated<string>;
	userId: string;
}

export interface CollectionArchive {
	archiveId: number;
	collectionId: number;
	createdAt: Generated<string>;
	order: number;
	updatedAt: Generated<string>;
}

export interface SeriesArchive {
	archiveId: number;
	createdAt: Generated<string>;
	order: number;
	seriesId: number;
	updatedAt: Generated<string>;
}

export interface Series {
	createdAt: Generated<string>;
	fts: string | null;
	id: Generated<number>;
	title: string;
	updatedAt: Generated<string>;
}

export interface SeriesFts {
	rowid: number;
	title: string;
}

export interface Tags {
	createdAt: Generated<string>;
	displayName: string | null;
	hidden: Generated<boolean>;
	id: Generated<number>;
	name: string;
	namespace: string;
	updatedAt: Generated<string>;
}

export interface UserBlacklist {
	blacklist: string;
	createdAt: Generated<string>;
	updatedAt: Generated<string>;
	userId: string;
}

export interface UserCodes {
	code: string;
	consumedAt: string | null;
	createdAt: Generated<string>;
	type: string;
	userId: string;
}

export interface UserFavorites {
	archiveId: number;
	createdAt: Generated<string>;
	userId: string;
}

export interface UserReadHistory {
	archiveId: number;
	finishedAt: string | null;
	lastPage: number;
	lastReadAt: Generated<string>;
	maxPage: number;
	startedAt: Generated<string>;
	startPage: number;
	userId: string;
}

export interface Users {
	createdAt: Generated<string>;
	email: string | null;
	id: string;
	passwordHash: string;
	updatedAt: Generated<string>;
	username: string;
}

export interface UserSessions {
	expiresAt: string;
	id: string;
	userId: string;
}

export interface ArchivesFts {
	rowid: number;
	title: string;
	tags: string;
}

export interface DB {
	archiveImages: ArchiveImages;
	archives: Archives;
	archivesFts: ArchivesFts;
	archiveSources: ArchiveSources;
	archiveTags: ArchiveTags;
	collection: Collection;
	collectionArchive: CollectionArchive;
	seriesArchive: SeriesArchive;
	series: Series;
	seriesFts: SeriesFts;
	tags: Tags;
	userBlacklist: UserBlacklist;
	userCodes: UserCodes;
	userFavorites: UserFavorites;
	userReadHistory: UserReadHistory;
	users: Users;
	userSessions: UserSessions;
}
