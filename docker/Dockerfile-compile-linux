FROM ubuntu:focal AS build
WORKDIR /build
ARG DEBIAN_FRONTEND=noninteractive
RUN --mount=target=/var/lib/apt/lists,type=cache,sharing=locked \
  --mount=target=/var/cache/apt,type=cache,sharing=locked \
  rm -f /etc/apt/apt.conf.d/docker-clean \
  && apt-get update \
  && apt-get -y --no-install-recommends install \
  unzip curl build-essential ninja-build python3-pip bc wget libfftw3-dev libopenexr-dev libgsf-1-dev libglib2.0-dev liborc-dev libopenslide-dev libmatio-dev libwebp-dev libjpeg-turbo8-dev libexpat1-dev libexif-dev libtiff5-dev libcfitsio-dev libpoppler-glib-dev librsvg2-dev libpango1.0-dev libopenjp2-7-dev liblcms2-dev libimagequant-dev
RUN pip3 install meson
RUN wget https://github.com/libvips/libvips/archive/refs/heads/master.zip && unzip master.zip
WORKDIR /build/libvips-master
RUN meson setup build --libdir=lib --buildtype=release --wipe
RUN cd build && meson compile && meson install
RUN ldconfig

WORKDIR /app
RUN curl -fsSL https://bun.sh/install | bash
COPY package.json bun.lockb ./
COPY patches ./patches
RUN --mount=target=/root/.bun/install/cache,type=cache \
  PATH="/root/.bun/bin:$PATH" SHARP_FORCE_GLOBAL_LIBVIPS=1 bun install --frozen-lockfile --verbose

COPY . .
RUN PATH="/root/.bun/bin:$PATH" ./build.sh

FROM scratch
COPY --from=build /app/faccina /faccina
ENTRYPOINT [ "/faccina" ]